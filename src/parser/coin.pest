WHITESPACE = _{ " " }
COMMENT    = _{ ";" ~ (!"\n" ~ ANY)* }
REST_OF_LINE = _{ (!"\n" ~ ANY)* }
LINE_BREAK = _{ "\n" }
EOF = _{ !ANY }

year  =  _{ ASCII_DIGIT{4} }
month =  _{ ASCII_DIGIT{2} }
day   =  _{ ASCII_DIGIT{2} }
date  = { year ~ "-" ~ month ~ "-" ~ day }

ident  = @{ (ASCII_ALPHA) ~ (ASCII_ALPHANUMERIC | "-" | "@" | "_")* }
accn   = ${ ident ~ (":" ~ ident)* }

posting = { accn ~ money? }
booking_desc = { !date ~ REST_OF_LINE }
booking = { booking_desc ~ LINE_BREAK ~ posting ~ (LINE_BREAK ~ posting)* }

chapter = { date ~ LINE_BREAK* ~ booking? ~ (LINE_BREAK+ ~ booking)* }
grammar = _{ SOI ~ (LINE_BREAK* ~ chapter)* ~ LINE_BREAK* ~ EOF }

// ------- MONEY -------
symbol = @{ !WHITESPACE ~ !ASCII_DIGIT ~ !neg ~ ANY }
number = @{ (ASCII_DIGIT)+ ~ ("." ~ (ASCII_DIGIT)+)? }
neg = @{ "-" }
code = @{ ASCII_ALPHA+ }

money_var_1 = ${ symbol ~ neg? ~ number } // $-10.00
money_var_2 = ${ neg? ~ symbol ~ number } // -$10.00
money_var_3 = ${ neg? ~ number ~ symbol } // -10.00Â£
money_var_4 = ${ neg? ~ number ~ WHITESPACE+ ~ code }   // -10.00 GBP
money = _{ money_var_1 | money_var_2 | money_var_3 | money_var_4 }

money_test = _{ SOI ~ money ~ EOF }

// ------- CMDS -------
WORD = _{ ASCII_ALPHANUMERIC+ }
nat = @{ ASCII_DIGIT+ }
integer = @{ "-"? ~ nat }
keyword = _{ "from" | "to" | "split" | "for" | "by" }

from_accn = { ("from" | "by" ) ~ accn ~ ("," ~ accn)* }
to_accn = { "to" ~ accn ~ ("," ~ accn)* }
desc = { (!keyword ~ WORD)+ }

accn_clause = _{ from_accn | to_accn }
desc_clause = _{ "for" ~ desc }
clause = _{ accn_clause | desc_clause }
matcher = { WORD }
fuzzy_date = { ANY+ }

split = { "split"? ~ !keyword ~ money ~ clause* }
reg = { "reg" ~ matcher? }
date_cmd = { "date" ~ (fuzzy_date)? }
accn_cmd = { "accns" }
del = { "del" }
open = { "open" ~ accn }
save = { "save" | "write" | "w" }
undo = { "undo" }
inspect = { "inspect" | "ins" }

cmd = _{ SOI ~  (split | reg | date_cmd | open | accn_cmd | save | del | undo | inspect )  ~ EOF }
